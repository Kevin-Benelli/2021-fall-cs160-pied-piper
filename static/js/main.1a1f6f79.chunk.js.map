{"version":3,"sources":["pics/logo.png","components/login.js","components/userdropdown.js","components/searchbar.js","components/header.js","pics/loading.gif","components/chart.js","components/chartpage.js","components/settingspage.js","components/chat.js","components/socketclient.js","App.js","utils/storage.js","reportWebVitals.js","index.js"],"names":["Login","props","setLoggedInUsername","useState","username","setUsername","showPassword","setShowPassword","password","setPassword","errorMsg","setErrorMsg","postAction","e","action","a","preventDefault","axios","post","then","response","data","error","message","console","log","lockButton","content","placement","icon","intent","Intent","WARNING","minimal","onClick","login","className","placeholder","onChange","target","value","rightElement","type","style","color","Colors","RED1","marginTop","PRIMARY","text","tabIndex","UserDropdown","loggedInUsername","dropdown","SearchBar","query","setQuery","goToTicker","url","window","open","searchButton","onSubmit","leftElement","Header","align","Alignment","LEFT","src","logo","alt","RIGHT","Chart","input","days","months","years","chartData","setChartData","setError","loaded","setLoaded","symbol","ticker","toUpperCase","now","Date","getFullYear","getMonth","Math","min","getDate","from","floor","getTime","to","useEffect","get","params","resolution","width","height","StockChart","draw","ctx","frameCount","canvas","candlesAndTimeAreaWidth","pricesAreaHeight","clearRect","fillStyle","fillRect","pricesAreaPos","white","font","fontSize","topPriceHeight","botPriceHeight","prices","getDisplayedPrices","lastHeight","textAlign","i","length","price","x","pricesAreaWidth","y","abs","fillText","toFixed","candles","amtOfCandles","candleWidth","stickWidth","max","lastPos","candleInfo","close","high","low","timestamp","openHeight","getHeightOfPrice","closeHeight","highHeight","lowHeight","candleColor","candlePos","actCandleWidth","stickPos","push","xRange","date","getMinutes","strDate","toLocaleDateString","undefined","month","toTimeString","slice","timeAreaHeight","dateForm","Intl","DateTimeFormat","timeStyle","hour12","dateStyle","state","mouseX","mouseY","setLineDash","strokeStyle","beginPath","moveTo","lineTo","stroke","hoverCandle","find","range","isInRangeInclusive","mouseDate","format","infoFrom","infoTo","infoStr","computed","zoomLevel","curr","ceil","updateMousePos","canvasX","canvasY","setState","this","loadingGif","React","Component","Canvas","rest","canvasRef","useRef","current","addEventListener","cRect","getBoundingClientRect","round","clientX","left","clientY","top","animationFrameId","context","getContext","render","requestAnimationFrame","cancelAnimationFrame","ref","ChartPage","useParams","SettingsPage","Chat","socket","chatroom","userMessage","setUserMessage","messageLog","setMessageLog","sendMessage","messageData","author","time","getHours","getSeconds","emit","prevMessageLog","on","map","messageContent","id","event","onKeyPress","key","io","SocketClient","userName","chatRoom","setChatRoom","showChatBox","setShowChatBox","App","homePage","setHomePage","defaultValue","stickyValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useStickyState","basename","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1f6f79.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7f424a7c.png\";","import React from 'react'\nimport { useState } from 'react';\nimport axios from 'axios'\nimport { Button, InputGroup, Intent } from '@blueprintjs/core';\nimport { Placement, Popover2, Tooltip2 } from '@blueprintjs/popover2';\nimport { Colors } from \"@blueprintjs/core\";\nimport './login.css';\nimport { setLocalStorageItem } from 'utils/storage';\n\nexport const Login = (props) => {\n  let { setLoggedInUsername } = props;\n\n  const [username, setUsername] = useState(\"\"); // init to empty string\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\"); // init to empty string\n  const [errorMsg, setErrorMsg] = useState(null); // init to empty string\n\n\n  // Post username and password for login/account creation to express backend\n  async function postAction(e, action){\n    e.preventDefault() // don't refresh form on submit\n    try{\n        axios.post(`http://localhost:5001/post_${action}`, {\n          username,\n          password\n        }).then((response) => {\n            // response.data holds a message string and an error boolean\n            if(response.data.error) {\n              setErrorMsg(response.data.message);\n            } else {\n              setErrorMsg(null);\n              setLoggedInUsername(username)\n            }\n        });\n    }catch(error){\n        console.log('Yo something went wrong: %s', error)\n    }\n  }\n\n  function handleLockClick() {\n    setShowPassword(!showPassword);\n  }\n\n  const lockButton = (\n    <Tooltip2 content={`${showPassword ? \"Hide\" : \"Show\"} Password`}\n              placement=\"right\"\n              >\n        <Button\n            icon={showPassword ? \"unlock\" : \"lock\"}\n            intent={Intent.WARNING}\n            minimal={true}\n            onClick={handleLockClick}\n            />\n    </Tooltip2>\n);\n\n  let login = (\n    <div className=\"login center\">\n      <form> \n        <InputGroup className=\"username\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                    value={username}\n                    />\n        <InputGroup className=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    value={password}\n                    rightElement={lockButton}\n                    type={showPassword ? \"text\" : \"password\"}\n                    />\n        <Button className=\"login-submit\"\n                onClick={ e => {\n                  postAction(e, \"login\");\n                }}> Login </Button>\n        <Button className=\"create-account-submit\"\n                onClick={ e => {\n                  postAction(e, \"create_account\");\n                }}> Create Account </Button>\n        <div style={{\n            color: Colors.RED1,\n            marginTop: \"5px\"\n          }}>{errorMsg}</div>\n      </form>\n    </div>\n  );\n\n  return (\n    <Popover2 placement=\"bottom\" content={ login } >\n      <Button intent={Intent.PRIMARY} icon=\"log-in\" text=\"Login\" tabIndex={0} />\n    </Popover2>\n  )\n}","import React from 'react'\nimport { Button, Intent } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport './userdropdown.css';\nimport { clearLocalStorageItem } from 'utils/storage';\n\nexport const UserDropdown = (props) => {\n  let { loggedInUsername, setLoggedInUsername } = props;\n\n  function logout(e) {\n    setLoggedInUsername(null);\n  }\n\n  let dropdown = (\n    <div className=\"userdropdown center\">\n      <Button className=\"logout\"\n                onClick={ logout }> Logout </Button><br/>\n      To be continued\n    </div>\n  );\n\n  return (\n    <Popover2 placement=\"bottom\" content={ dropdown } >\n      <Button intent={Intent.PRIMARY} icon=\"user\" text={ loggedInUsername } tabIndex={0} />\n    </Popover2>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, InputGroup } from '@blueprintjs/core';\nimport './searchbar.css';\n\n\n\nexport const SearchBar = () => {\n  const [query, setQuery] = useState(\"\"); // init to empty string\n\n  function goToTicker(e) {\n    let url = `/2021-fall-cs160-pied-piper/#/ticker/${query}`;\n    console.log(url)\n    window.open(url, \"_self\");\n  }\n\n  const searchButton = (\n    <Button\n        icon={\"search\"}\n        minimal={true}\n        onClick={goToTicker}\n        />\n  );\n\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={ goToTicker }>\n        <InputGroup className=\"search-input\"\n                    placeholder=\"Search\"\n                    leftElement={ searchButton }\n                    onChange={(e) => setQuery(e.target.value)}\n                    />\n      </form>\n    </div>\n  )\n} ","import React, { useState } from 'react'\nimport { Alignment, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport logo from '../pics/logo.png';\nimport { Login } from './login';\nimport './header.css'\nimport { UserDropdown } from './userdropdown';\nimport { SearchBar } from './searchbar';\n\nexport const Header = (props) => {\n  let { loggedInUsername, setLoggedInUsername } = props;\n\n  return (\n    <div className=\"center\">\n      <div className=\"header\">\n        <Navbar className=\"header-navbar\">\n          <NavbarGroup align={ Alignment.LEFT }>\n            <img src={logo} className=\"header-logo\" alt=\"logo\" />\n          </NavbarGroup>\n\n          <NavbarGroup align={ Alignment.RIGHT }>\n            <SearchBar/>\n            { loggedInUsername && \n              <UserDropdown loggedInUsername={loggedInUsername}\n                            setLoggedInUsername={setLoggedInUsername}/>\n            }\n            { !loggedInUsername &&\n              <Login setLoggedInUsername={setLoggedInUsername}/>\n            }\n          </NavbarGroup>\n          \n        </Navbar>\n      </div>\n    </div>\n  )\n} ","export default __webpack_public_path__ + \"static/media/loading.60616635.gif\";","import './chart.css';\nimport loadingGif from \"../pics/loading.gif\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\n\n// Helpers\nfunction deltaDate(input, days, months, years) {\n  return new Date(\n    input.getFullYear() + years,\n    input.getMonth() + months,\n    Math.min(\n      input.getDate() + days,\n      new Date(\n        input.getFullYear() + years,\n        input.getMonth() + months + 1,\n        0\n      ).getDate()\n    )\n  );\n}\n// from and to are 2 number arrays, s is the number to map\nfunction mapRange(from, to, s) {\n  return to[0] + ((s - from[0]) * (to[1] - to[0])) / (from[1] - from[0]);\n}\n// range is an increasing 2 number array\nfunction isInRangeInclusive(x, range) {\n  return x >= range[0] && x <= range[1];\n}\nfunction isInRangeExclusive(x, range) {\n  return x > range[0] && x < range[1];\n}\n\nexport const Chart = (props) => {\n  let [chartData, setChartData] = useState(null);\n  let [error, setError] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let width = \"800px\";\n  let height = \"500px\";\n  let resolution = \"30\";\n  let symbol = props.ticker.toUpperCase();\n\n  let now = new Date();\n  let then = deltaDate(now, -1, 0, 0);\n  let from = Math.floor(then.getTime() / 1000);\n  let to = Math.floor(now.getTime() / 1000);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/chart_data\", { \n      params: {\n        resolution: resolution,\n        symbol: symbol,\n        from: from,\n        to: to\n      } \n    }).then((response) => {\n      // console.log(\"Got response\")\n      // console.log(response)\n      setChartData(response.data.chartData);\n      setError(response.data.error);\n      setLoaded(true);\n    })\n  }, []);\n\n  return (\n    <div className=\"center\">\n      <div className=\"chart\">\n        <StockChart\n          chartData={chartData}\n          error={error}\n          loaded={loaded}\n          width={width}\n          height={height}\n          symbol={symbol}\n          resolution={resolution}\n          from={from}\n          to={to}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass StockChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoomLevel: 1,\n      mouseX: null,\n      mouseY: null\n    };\n  }\n\n  draw = (ctx, frameCount) => {\n    // Color palette\n    let white = \"#ffffff\";\n    let gray = \"#808080\";\n\n    let bgColor = \"#222222\";\n    let pricesAreaSeparatorColor = \"#2b2b43\";\n    let posCandleColor = \"#26a69a\";\n    let negCandleColor = \"#ee5350\";\n    let evenCandleColor = gray;\n    let pricesTextColor = white;\n    let timeTextColor = white;\n    let infoTextColor = white;\n    let mouseLinesColor = \"#758696\";\n    let mouseTimeBGColor = \"#808080\";\n\n    // Widths and heights\n    let width = ctx.canvas.width;\n    let height = ctx.canvas.height;\n    let pricesAreaWidth = 60;\n    let candlesAndTimeAreaWidth = width - pricesAreaWidth;\n    let timeAreaHeight = 40;\n    let pricesAreaHeight = height - timeAreaHeight;\n\n    // Background\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, width, height);\n\n    // Prices Area\n    let pricesAreaPos = width - pricesAreaWidth;\n    let pricesAreaSeparatorWidth = 2;\n    ctx.fillStyle = pricesAreaSeparatorColor;\n    ctx.fillRect(pricesAreaPos, 0, pricesAreaSeparatorWidth, height);\n\n    ctx.fillStyle = pricesTextColor;\n    let fontSize = 15;\n    let pricePadding = 10;\n    ctx.font = fontSize + \"px Georgia\";\n    let topPadding = 5;\n    let prices = this.getDisplayedPrices();\n\n    let topPriceHeight, botPriceHeight;\n    let lastHeight = 0;\n    ctx.textAlign = \"center\";\n    for (let i = 0; i < prices.length; i++) {\n      let price = prices[i];\n      let x = pricesAreaPos + pricesAreaWidth / 2;\n      let y = (pricesAreaHeight / prices.length) * i + fontSize + topPadding;\n      if (i === 0) topPriceHeight = y;\n      else if (i === prices.length - 1) botPriceHeight = y;\n      if (Math.abs(y - lastHeight) >= fontSize + pricePadding) {\n        ctx.fillText(price.toFixed(2), x, y);\n        lastHeight = y;\n      }\n    }\n\n    // Candles and Time Area\n    let candles = this.props.chartData.candles;\n    let amtOfCandles = candles[\"c\"].length;\n    let rightPadding = 40;\n    let leftRightMargin = 5;\n    let candleWidth = (candlesAndTimeAreaWidth - rightPadding) / amtOfCandles;\n    let stickWidth = Math.max(candleWidth / 20, 1);\n    let lastPos = 0;\n    let minTimeWidth = 50;\n    let candleInfo = [];\n    for (let i = 0; i < amtOfCandles; i++) {\n      let open = candles[\"o\"][i];\n      let close = candles[\"c\"][i];\n      let high = candles[\"h\"][i];\n      let low = candles[\"l\"][i];\n      let timestamp = candles[\"t\"][i];\n      let volume = candles[\"v\"][i];\n\n      let openHeight = this.getHeightOfPrice(\n        open,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let closeHeight = this.getHeightOfPrice(\n        close,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let highHeight = this.getHeightOfPrice(\n        high,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let lowHeight = this.getHeightOfPrice(\n        low,\n        topPriceHeight,\n        botPriceHeight\n      );\n\n      let candleColor;\n      if (open < close) {\n        candleColor = posCandleColor;\n      } else if (open > close) {\n        candleColor = negCandleColor;\n      } else {\n        candleColor = evenCandleColor;\n      }\n\n      ctx.fillStyle = candleColor;\n      let candlePos = i * candleWidth + leftRightMargin;\n      let actCandleWidth = candleWidth - leftRightMargin;\n      let stickPos = candlePos + actCandleWidth / 2 - stickWidth / 2;\n      ctx.fillRect(\n        candlePos,\n        Math.min(openHeight, closeHeight),\n        actCandleWidth,\n        Math.abs(openHeight - closeHeight)\n      );\n      ctx.fillRect(stickPos, highHeight, stickWidth, lowHeight - highHeight);\n\n      candleInfo.push({\n        timestamp: timestamp,\n        close: close,\n        closeHeight: closeHeight,\n        open: open,\n        openHeight: openHeight,\n        high: high,\n        highHeight: highHeight,\n        low: low,\n        lowHeight: lowHeight,\n        xRange: [candlePos, candlePos + actCandleWidth]\n      });\n\n      // Time\n      let increment = 5;\n      let date = new Date(timestamp * 1000);\n      if (\n        date.getMinutes() % increment === 0 &&\n        Math.abs(stickPos - lastPos) >= minTimeWidth\n      ) {\n        ctx.fillStyle = timeTextColor;\n        let strDate;\n        if (date.getDate() === 0) {\n          strDate = date.toLocaleDateString(undefined, { month: \"short\" });\n        } else {\n          strDate = date.toTimeString().slice(0, 5);\n        }\n        ctx.fillText(strDate, stickPos, height - timeAreaHeight / 2);\n        lastPos = stickPos;\n      }\n    }\n\n    let dateForm = new Intl.DateTimeFormat(\"en\", {\n      timeStyle: \"short\",\n      hour12: false,\n      dateStyle: \"short\"\n    });\n\n    // Mouse\n    let { mouseX, mouseY } = this.state;\n    if (mouseX && mouseY) {\n      ctx.setLineDash([8, 6]);\n      ctx.strokeStyle = mouseLinesColor;\n\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(0, mouseY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(candlesAndTimeAreaWidth, mouseY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(mouseX, 0);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(mouseX, height);\n      ctx.stroke();\n\n      ctx.setLineDash([]);\n      let hoverCandle = candleInfo.find(({ xRange }) => {\n        return isInRangeInclusive(mouseX, xRange);\n      });\n      if (hoverCandle) {\n        let { timestamp, open, close, low, high } = hoverCandle;\n        let mouseDate = new Date(timestamp * 1000);\n        ctx.fillStyle = \"green\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(\n          \"Time: \" +\n            dateForm.format(mouseDate) +\n            \", Open: \" +\n            open.toFixed(2) +\n            \", Close: \" +\n            close.toFixed(2) +\n            \", Low: \" +\n            low.toFixed(2) +\n            \", High: \" +\n            high.toFixed(2),\n          5,\n          40\n        );\n      }\n    }\n\n    // Info\n    ctx.fillStyle = infoTextColor;\n    ctx.textAlign = \"left\";\n    let infoFrom = new Date(this.props.from * 1000);\n    let infoTo = new Date(this.props.to * 1000);\n    let infoStr =\n      this.props.symbol +\n      \" from \" +\n      dateForm.format(infoFrom) +\n      \" to \" +\n      dateForm.format(infoTo) +\n      \", Resolution: \" +\n      this.props.resolution;\n    ctx.fillText(infoStr, 5, fontSize + 5);\n  };\n\n  getHeightOfPrice = (price, topPriceHeight, botPriceHeight) => {\n    let { max, min } = this.props.chartData.computed;\n    return mapRange([min, max], [botPriceHeight, topPriceHeight], price);\n  };\n\n  getDisplayedPrices = () => {\n    let { max, min } = this.props.chartData.computed;\n    let zoomLevel = this.state.zoomLevel;\n    let defaultStep = 1;\n\n    let prices = [];\n    for (\n      let curr = Math.ceil(max);\n      curr > min;\n      curr -= zoomLevel * defaultStep\n    ) {\n      prices.push(curr);\n    }\n    prices.push(Math.floor(min));\n    return prices;\n  };\n\n  updateMousePos = (canvasX, canvasY) => {\n    this.setState({\n      mouseX: canvasX,\n      mouseY: canvasY\n    });\n  };\n\n  render() {\n    let { width, height, loaded, error } = this.props;\n\n    return (\n      <div className=\"center\">\n        <div className=\"chart\" style={{ width: width, height: height }}>\n          {loaded && error === null && (\n            <Canvas\n              draw={this.draw}\n              width={width}\n              height={height}\n              style={{\n                width: width,\n                height: height\n                // border: \"1px solid green\"\n              }}\n              updateMousePos={this.updateMousePos}\n            />\n          )}\n          {loaded && error !== null && (\n            <div> \n              Error 404: ticker not found\n            </div>\n          )}\n          {!loaded && <img src={loadingGif} alt=\"Loading...\" />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Canvas = (props) => {\n  const { updateMousePos, draw, ...rest } = props;\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"mousemove\", function (e) {\n      var cRect = canvas.getBoundingClientRect(); // Gets CSS pos, and width/height\n      var canvasX = Math.round(e.clientX - cRect.left); // Subtract the 'left' of the canvas\n      var canvasY = Math.round(e.clientY - cRect.top); // from the X/Y positions to make\n      updateMousePos(canvasX, canvasY);\n    });\n    canvas.addEventListener(\"mouseleave\", function (e) {\n      updateMousePos(null, null);\n    });\n    const context = canvas.getContext(\"2d\");\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n\n  return <canvas ref={canvasRef} {...rest} />;\n};","import './chartpage.css';\nimport React from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Chart } from './chart';\n\nexport const ChartPage = () => {\n  const { ticker } = useParams(); \n\n  return (\n    <Chart ticker={ticker}/>\n  )\n}","import React from 'react'\nimport { Alignment, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport './settingspage.css'\n\n\nexport const SettingsPage = () => {\n  return (\n    <div className=\"center\">\n      <div>  \n        <h1 className=\"settings-body\">\n          Welcome to the settings page.\n        </h1>\n      </div>\n    </div>\n  )\n} ","import React from 'react'\nimport { useState, useEffect } from 'react'\n\n\nexport const Chat = ({socket, username, chatroom}) => {\n    const [userMessage, setUserMessage] = useState(\"\");\n    const [messageLog, setMessageLog] = useState([]);\n\n\n    const resetInputField = () => {\n      setUserMessage(\"\");\n    };\n\n    const sendMessage = async () => {\n      // If user drafts a message then set message for emission\n      if (userMessage !== \"\"){\n        // messageData provides more details about message like time\n        const messageData = {\n          chatroom: chatroom, // stores specific chatroom\n          author: username, // maps message to user name\n          message: userMessage, // sets messsage to message drafted\n           // gets time stamp by hours and minutes\n          time: \n          new Date(Date.now()).getHours() + \n          \":\" + \n          new Date(Date.now()).getMinutes() + \n          \":\" + \n          new Date(Date.now()).getSeconds(),\n        };\n\n        // Wait for message to be sent before continuing to move forward so make it asyncronous\n        // emits message data object to messaging server\n        await socket.emit(\"send_message\", messageData);   \n        \n        // When we send a message we store our message in the chat log\n        setMessageLog((prevMessageLog) => [...prevMessageLog, messageData])\n      }\n    };\n\n    // Listens to whenever there is a change in socket server\n    useEffect(() => {\n      // listen to receive_message event and create call back function to handle message on client\n      // grab data from backend (data)\n      socket.on(\"receive_message\", (data) => {\n        console.log(data);\n        // whenever someone emmit a message it sets message log to what ever it was before plus the new message\n        setMessageLog((prevMessageLog) => [...prevMessageLog, data])\n      });\n      \n      \n    }, [socket]);\n\n    return( \n    \n    <div> \n      <div className=\"chat-room-header\"> \n        <p> Live Chat Room for { chatroom.toUpperCase() } </p>\n      </div>\n      \n      \n      <div className=\"chat-room-body\"> \n        {\n          // for each element in message list return <h1> message </h1>\n          messageLog.map((messageContent) => {\n            return (\n\n              // access ids: user-self and user-other to sytle the user respectivley. \n              // user-self should be left centered and user-other should be on right\n              <div className=\"message\" id={username === messageContent.author ? \"user-self\" : \"user-other\"}> \n              <div>\n                <div className=\"message-content\">\n                  <p>{messageContent.message}</p>\n                </div>\n                <div className=\"message-meta\">\n                  <p id=\"sender_time\">{messageContent.author} Sent: {messageContent.time}</p>\n                </div>\n                \n                </div>\n              </div>\n            );\n          })}\n\n      </div>\n      \n      \n      <div className=\"chat-room-footer\">\n        <input \n        type=\"text\" \n        placeholder=\"Lets Talk Stocks...\"\n        onChange={(event) => {\n          setUserMessage(event.target.value)\n        }}\n        onKeyPress={(event) => {\n          // If user types message and presses enter then send the message \n          event.key === \"Enter\" && sendMessage() \n        }}\n        />\n        <button onClick={sendMessage}>&#9658;</button>\n        {/*  &#9658; is a message send icon button */}\n      </div>\n    </div>\n    \n    )\n  \n} ","import React from 'react'\n\nimport { io } from 'socket.io-client'\nimport { useState } from 'react'\nimport { Chat } from './chat'\nconst ENDPOINT = \"http://localhost:5001\";\nconst socket = io(ENDPOINT);\n\nexport const SocketClient = () => {\n  const [userName, setUsername] = useState(\"\");\n  const [chatRoom, setChatRoom] = useState(\"\");\n  const [showChatBox, setShowChatBox] = useState(false);\n\n\n  // function emit socket event to join room. \n  const joinRoom = () => {\n    // GET HASHSET AND CHECK IF CHATROOM TICKER EXISTS IN TICKER SET; ELSE ERROR MESSAGE\n    if(userName !== \"\" && chatRoom !== \"\"){\n      socket.emit(\"join_chat_room\", chatRoom);\n      setShowChatBox(true);\n    }\n  };\n\n  return (\n    <div className=\"center\">\n      {/* If chat box is not displayed show enter chat room; else show chat box */}\n      {!showChatBox ? (\n        <div>\n          <h3> Join Stocked Chat Room Now! </h3>\n            <input \n            type=\"text\" \n            placeholder=\"Enter Name\" \n            onChange={(event) => {\n              setUsername(event.target.value.toUpperCase());\n            }}/>\n            <input \n            type=\"text\" \n            placeholder=\"Enter Ticker\" \n            onChange={(event) => {\n              setChatRoom(event.target.value.toUpperCase());\n            \n            }}/>\n            \n            <button onClick={joinRoom}> Join Chat Room </button>        \n        </div>\n      ) : (\n        // Call our chat component and pass in the socket\n        // Keep track of the username and chat room being used so we pass that in as pops\n          <Chat socket={socket} username={userName} chatroom={chatRoom}/>\n      )}\n        \n    </div>\n  );\n} ","import './App.css';\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  HashRouter,\n  Route\n} from \"react-router-dom\";\nimport { Header } from './components/header';\nimport { ChartPage } from './components/chartpage';\nimport { SettingsPage } from './components/settingspage';\nimport { useStickyState } from 'utils/storage';\nimport { SocketClient } from 'components/socketclient';\n\n\nfunction App() {\n  \n  const [homePage, setHomePage] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/home\").then((response) => {\n      setHomePage(response.data)\n    })\n  }, []);\n\n  const [loggedInUsername, setLoggedInUsername] = useStickyState(null, \"username\");\n\n  return (\n    \n      <div className=\"center\">\n      <div className=\"App\">\n        <Header loggedInUsername={loggedInUsername}\n                setLoggedInUsername={setLoggedInUsername}/>\n        {homePage}\n        { loggedInUsername && \n          <div>\n            This div shows when a user is logged in.\n          </div>\n        }\n        { !loggedInUsername && \n          <div>\n            This div shows when there's no logged in user.\n          </div>\n        }\n        \n          <HashRouter basename=\"/2021-fall-cs160-pied-piper\">\n\n            {/* all routes that look like /ticker/xyz will be handled by the ChartPage component */}\n            <Route path=\"/ticker/:ticker\" children={<ChartPage/>} />\n            <Route path=\"/settings\" children={<SettingsPage />}/>\n            <Route path=\"/chat\" children={<SocketClient />}/>\n\n            {/* <Route path=\"/news/:ticker\" component={<NewsPage} /> */}\n\n\n          </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nconst setLocalStorageItem = (item, data) => {\n  localStorage.setItem(item, JSON.stringify(data));\n}\n\nconst clearLocalStorageItem = (item, data) => {\n  localStorage.setItem(item, null);\n}\n\nconst getLocalStorageItem = (item) => {\n  const rawItem = localStorage.getItem(item);\n  if (rawItem) {\n    try {\n      return JSON.parse(rawItem);\n    } catch {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n// Based on https://www.joshwcomeau.com/react/persisting-react-state-in-localstorage/\nfunction useStickyState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null\n      ? JSON.parse(stickyValue)\n      : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport { setLocalStorageItem, clearLocalStorageItem, getLocalStorageItem, useStickyState };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/normalize.css/normalize.css';\nimport '../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '../node_modules/@blueprintjs/core/lib/css/blueprint.css';\nimport '../node_modules/@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport '../node_modules/@blueprintjs/popover2/lib/css/blueprint-popover2.css';\nimport '../node_modules/@blueprintjs/select/lib/css/blueprint-select.css';\nimport '../node_modules/@blueprintjs/timezone/lib/css/blueprint-timezone.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}