{"version":3,"sources":["pics/logo.png","components/login.js","components/userdropdown.js","components/header.js","pics/loading.gif","components/chart.js","components/chartpage.js","components/settingspage.js","components/searchbar.js","App.js","utils/storage.js","reportWebVitals.js","index.js"],"names":["Login","props","setLoggedInUsername","useState","username","setUsername","showPassword","setShowPassword","password","setPassword","errorMsg","setErrorMsg","postAction","e","action","a","preventDefault","axios","post","then","response","data","error","message","console","log","lockButton","content","placement","icon","intent","Intent","WARNING","minimal","onClick","login","className","placeholder","onChange","target","value","rightElement","type","style","color","Colors","RED1","marginTop","PRIMARY","text","tabIndex","UserDropdown","loggedInUsername","dropdown","Header","align","Alignment","LEFT","src","logo","alt","RIGHT","Chart","input","days","months","years","chartData","setChartData","setError","loaded","setLoaded","symbol","ticker","toUpperCase","now","Date","getFullYear","getMonth","Math","min","getDate","from","floor","getTime","to","useEffect","get","params","resolution","width","height","StockChart","draw","ctx","frameCount","canvas","candlesAndTimeAreaWidth","pricesAreaHeight","clearRect","fillStyle","fillRect","pricesAreaPos","white","font","fontSize","topPriceHeight","botPriceHeight","prices","getDisplayedPrices","lastHeight","textAlign","i","length","price","x","pricesAreaWidth","y","abs","fillText","toFixed","candles","amtOfCandles","candleWidth","stickWidth","max","lastPos","candleInfo","open","close","high","low","timestamp","openHeight","getHeightOfPrice","closeHeight","highHeight","lowHeight","candleColor","candlePos","actCandleWidth","stickPos","push","xRange","date","getMinutes","strDate","toLocaleDateString","undefined","month","toTimeString","slice","timeAreaHeight","dateForm","Intl","DateTimeFormat","timeStyle","hour12","dateStyle","state","mouseX","mouseY","setLineDash","strokeStyle","beginPath","moveTo","lineTo","stroke","hoverCandle","find","range","isInRangeInclusive","mouseDate","format","infoFrom","infoTo","infoStr","computed","zoomLevel","curr","ceil","updateMousePos","canvasX","canvasY","setState","this","loadingGif","React","Component","Canvas","rest","canvasRef","useRef","current","addEventListener","cRect","getBoundingClientRect","round","clientX","left","clientY","top","animationFrameId","context","getContext","render","window","requestAnimationFrame","cancelAnimationFrame","ref","ChartPage","useParams","SettingsPage","SearchBar","App","homePage","setHomePage","defaultValue","key","stickyValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useStickyState","basename","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d9d3963.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7f424a7c.png\";","import React from 'react'\nimport { useState } from 'react';\nimport axios from 'axios'\nimport { Button, InputGroup, Intent } from '@blueprintjs/core';\nimport { Placement, Popover2, Tooltip2 } from '@blueprintjs/popover2';\nimport { Colors } from \"@blueprintjs/core\";\nimport './login.css';\nimport { setLocalStorageItem } from 'utils/storage';\n\nexport const Login = (props) => {\n  let { setLoggedInUsername } = props;\n\n  const [username, setUsername] = useState(\"\"); // init to empty string\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\"); // init to empty string\n  const [errorMsg, setErrorMsg] = useState(null); // init to empty string\n\n\n  // Post username and password for login/account creation to express backend\n  async function postAction(e, action){\n    e.preventDefault() // don't refresh form on submit\n    try{\n        axios.post(`http://localhost:5000/post_${action}`, {\n          username,\n          password\n        }).then((response) => {\n            // response.data holds a message string and an error boolean\n            if(response.data.error) {\n              setErrorMsg(response.data.message);\n            } else {\n              setErrorMsg(null);\n              setLoggedInUsername(username)\n            }\n        });\n    }catch(error){\n        console.log('Yo something went wrong: %s', error)\n    }\n  }\n\n  function handleLockClick() {\n    setShowPassword(!showPassword);\n  }\n\n  const lockButton = (\n    <Tooltip2 content={`${showPassword ? \"Hide\" : \"Show\"} Password`}\n              placement=\"right\"\n              >\n        <Button\n            icon={showPassword ? \"unlock\" : \"lock\"}\n            intent={Intent.WARNING}\n            minimal={true}\n            onClick={handleLockClick}\n            />\n    </Tooltip2>\n);\n\n  let login = (\n    <div className=\"login center\">\n      <form> \n        <InputGroup className=\"username\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                    value={username}\n                    />\n        <InputGroup className=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    value={password}\n                    rightElement={lockButton}\n                    type={showPassword ? \"text\" : \"password\"}\n                    />\n        <Button className=\"login-submit\"\n                onClick={ e => {\n                  postAction(e, \"login\");\n                }}> Login </Button>\n        <Button className=\"create-account-submit\"\n                onClick={ e => {\n                  postAction(e, \"create_account\");\n                }}> Create Account </Button>\n        <div style={{\n            color: Colors.RED1,\n            marginTop: \"5px\"\n          }}>{errorMsg}</div>\n      </form>\n    </div>\n  );\n\n  return (\n    <Popover2 placement=\"bottom\" content={ login } >\n      <Button intent={Intent.PRIMARY} icon=\"log-in\" text=\"Login\" tabIndex={0} />\n    </Popover2>\n  )\n}","import React from 'react'\nimport { Button, Intent } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport './userdropdown.css';\nimport { clearLocalStorageItem } from 'utils/storage';\n\nexport const UserDropdown = (props) => {\n  let { loggedInUsername, setLoggedInUsername } = props;\n\n  function logout(e) {\n    setLoggedInUsername(null);\n  }\n\n  let dropdown = (\n    <div className=\"userdropdown center\">\n      <Button className=\"logout\"\n                onClick={ logout }> Logout </Button><br/>\n      To be continued\n    </div>\n  );\n\n  return (\n    <Popover2 placement=\"bottom\" content={ dropdown } >\n      <Button intent={Intent.PRIMARY} icon=\"user\" text={ loggedInUsername } tabIndex={0} />\n    </Popover2>\n  )\n}\n","import React, { useState } from 'react'\nimport { Alignment, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport logo from '../pics/logo.png';\nimport { Login } from './login';\nimport './header.css'\nimport { getLocalStorageItem } from 'utils/storage';\nimport { UserDropdown } from './userdropdown';\n\nexport const Header = (props) => {\n  let { loggedInUsername, setLoggedInUsername } = props;\n\n  return (\n    <div className=\"center\">\n      <div className=\"header\">\n        <Navbar className=\"header-navbar\">\n          <NavbarGroup align={ Alignment.LEFT }>\n            <img src={logo} className=\"header-logo\" alt=\"logo\" />\n          </NavbarGroup>\n          \n          <NavbarGroup align={ Alignment.RIGHT }>\n            { loggedInUsername && \n              <UserDropdown loggedInUsername={loggedInUsername}\n                            setLoggedInUsername={setLoggedInUsername}/>\n            }\n            { !loggedInUsername &&\n              <Login setLoggedInUsername={setLoggedInUsername}/>\n            }\n          </NavbarGroup>\n          \n        </Navbar>\n      </div>\n    </div>\n  )\n} ","export default __webpack_public_path__ + \"static/media/loading.60616635.gif\";","import './chart.css';\nimport loadingGif from \"../pics/loading.gif\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\n\n// Helpers\nfunction deltaDate(input, days, months, years) {\n  return new Date(\n    input.getFullYear() + years,\n    input.getMonth() + months,\n    Math.min(\n      input.getDate() + days,\n      new Date(\n        input.getFullYear() + years,\n        input.getMonth() + months + 1,\n        0\n      ).getDate()\n    )\n  );\n}\n// from and to are 2 number arrays, s is the number to map\nfunction mapRange(from, to, s) {\n  return to[0] + ((s - from[0]) * (to[1] - to[0])) / (from[1] - from[0]);\n}\n// range is an increasing 2 number array\nfunction isInRangeInclusive(x, range) {\n  return x >= range[0] && x <= range[1];\n}\nfunction isInRangeExclusive(x, range) {\n  return x > range[0] && x < range[1];\n}\n\nexport const Chart = (props) => {\n  let [chartData, setChartData] = useState(null);\n  let [error, setError] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let width = \"800px\";\n  let height = \"500px\";\n  let resolution = \"30\";\n  let symbol = props.ticker.toUpperCase();\n\n  let now = new Date();\n  let then = deltaDate(now, -1, 0, 0);\n  let from = Math.floor(then.getTime() / 1000);\n  let to = Math.floor(now.getTime() / 1000);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/chart_data\", { \n      params: {\n        resolution: resolution,\n        symbol: symbol,\n        from: from,\n        to: to\n      } \n    }).then((response) => {\n      // console.log(\"Got response\")\n      // console.log(response)\n      setChartData(response.data.chartData);\n      setError(response.data.error);\n      setLoaded(true);\n    })\n  }, []);\n\n  return (\n    <div className=\"center\">\n      <div className=\"chart\">\n        <StockChart\n          chartData={chartData}\n          error={error}\n          loaded={loaded}\n          width={width}\n          height={height}\n          symbol={symbol}\n          resolution={resolution}\n          from={from}\n          to={to}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass StockChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoomLevel: 1,\n      mouseX: null,\n      mouseY: null\n    };\n  }\n\n  draw = (ctx, frameCount) => {\n    // Color palette\n    let white = \"#ffffff\";\n    let gray = \"#808080\";\n\n    let bgColor = \"#222222\";\n    let pricesAreaSeparatorColor = \"#2b2b43\";\n    let posCandleColor = \"#26a69a\";\n    let negCandleColor = \"#ee5350\";\n    let evenCandleColor = gray;\n    let pricesTextColor = white;\n    let timeTextColor = white;\n    let infoTextColor = white;\n    let mouseLinesColor = \"#758696\";\n    let mouseTimeBGColor = \"#808080\";\n\n    // Widths and heights\n    let width = ctx.canvas.width;\n    let height = ctx.canvas.height;\n    let pricesAreaWidth = 60;\n    let candlesAndTimeAreaWidth = width - pricesAreaWidth;\n    let timeAreaHeight = 40;\n    let pricesAreaHeight = height - timeAreaHeight;\n\n    // Background\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, width, height);\n\n    // Prices Area\n    let pricesAreaPos = width - pricesAreaWidth;\n    let pricesAreaSeparatorWidth = 2;\n    ctx.fillStyle = pricesAreaSeparatorColor;\n    ctx.fillRect(pricesAreaPos, 0, pricesAreaSeparatorWidth, height);\n\n    ctx.fillStyle = pricesTextColor;\n    let fontSize = 15;\n    let pricePadding = 10;\n    ctx.font = fontSize + \"px Georgia\";\n    let topPadding = 5;\n    let prices = this.getDisplayedPrices();\n\n    let topPriceHeight, botPriceHeight;\n    let lastHeight = 0;\n    ctx.textAlign = \"center\";\n    for (let i = 0; i < prices.length; i++) {\n      let price = prices[i];\n      let x = pricesAreaPos + pricesAreaWidth / 2;\n      let y = (pricesAreaHeight / prices.length) * i + fontSize + topPadding;\n      if (i === 0) topPriceHeight = y;\n      else if (i === prices.length - 1) botPriceHeight = y;\n      if (Math.abs(y - lastHeight) >= fontSize + pricePadding) {\n        ctx.fillText(price.toFixed(2), x, y);\n        lastHeight = y;\n      }\n    }\n\n    // Candles and Time Area\n    let candles = this.props.chartData.candles;\n    let amtOfCandles = candles[\"c\"].length;\n    let rightPadding = 40;\n    let leftRightMargin = 5;\n    let candleWidth = (candlesAndTimeAreaWidth - rightPadding) / amtOfCandles;\n    let stickWidth = Math.max(candleWidth / 20, 1);\n    let lastPos = 0;\n    let minTimeWidth = 50;\n    let candleInfo = [];\n    for (let i = 0; i < amtOfCandles; i++) {\n      let open = candles[\"o\"][i];\n      let close = candles[\"c\"][i];\n      let high = candles[\"h\"][i];\n      let low = candles[\"l\"][i];\n      let timestamp = candles[\"t\"][i];\n      let volume = candles[\"v\"][i];\n\n      let openHeight = this.getHeightOfPrice(\n        open,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let closeHeight = this.getHeightOfPrice(\n        close,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let highHeight = this.getHeightOfPrice(\n        high,\n        topPriceHeight,\n        botPriceHeight\n      );\n      let lowHeight = this.getHeightOfPrice(\n        low,\n        topPriceHeight,\n        botPriceHeight\n      );\n\n      let candleColor;\n      if (open < close) {\n        candleColor = posCandleColor;\n      } else if (open > close) {\n        candleColor = negCandleColor;\n      } else {\n        candleColor = evenCandleColor;\n      }\n\n      ctx.fillStyle = candleColor;\n      let candlePos = i * candleWidth + leftRightMargin;\n      let actCandleWidth = candleWidth - leftRightMargin;\n      let stickPos = candlePos + actCandleWidth / 2 - stickWidth / 2;\n      ctx.fillRect(\n        candlePos,\n        Math.min(openHeight, closeHeight),\n        actCandleWidth,\n        Math.abs(openHeight - closeHeight)\n      );\n      ctx.fillRect(stickPos, highHeight, stickWidth, lowHeight - highHeight);\n\n      candleInfo.push({\n        timestamp: timestamp,\n        close: close,\n        closeHeight: closeHeight,\n        open: open,\n        openHeight: openHeight,\n        high: high,\n        highHeight: highHeight,\n        low: low,\n        lowHeight: lowHeight,\n        xRange: [candlePos, candlePos + actCandleWidth]\n      });\n\n      // Time\n      let increment = 5;\n      let date = new Date(timestamp * 1000);\n      if (\n        date.getMinutes() % increment === 0 &&\n        Math.abs(stickPos - lastPos) >= minTimeWidth\n      ) {\n        ctx.fillStyle = timeTextColor;\n        let strDate;\n        if (date.getDate() === 0) {\n          strDate = date.toLocaleDateString(undefined, { month: \"short\" });\n        } else {\n          strDate = date.toTimeString().slice(0, 5);\n        }\n        ctx.fillText(strDate, stickPos, height - timeAreaHeight / 2);\n        lastPos = stickPos;\n      }\n    }\n\n    let dateForm = new Intl.DateTimeFormat(\"en\", {\n      timeStyle: \"short\",\n      hour12: false,\n      dateStyle: \"short\"\n    });\n\n    // Mouse\n    let { mouseX, mouseY } = this.state;\n    if (mouseX && mouseY) {\n      ctx.setLineDash([8, 6]);\n      ctx.strokeStyle = mouseLinesColor;\n\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(0, mouseY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(candlesAndTimeAreaWidth, mouseY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(mouseX, 0);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(mouseX, mouseY);\n      ctx.lineTo(mouseX, height);\n      ctx.stroke();\n\n      ctx.setLineDash([]);\n      let hoverCandle = candleInfo.find(({ xRange }) => {\n        return isInRangeInclusive(mouseX, xRange);\n      });\n      if (hoverCandle) {\n        let { timestamp, open, close, low, high } = hoverCandle;\n        let mouseDate = new Date(timestamp * 1000);\n        ctx.fillStyle = \"green\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(\n          \"Time: \" +\n            dateForm.format(mouseDate) +\n            \", Open: \" +\n            open.toFixed(2) +\n            \", Close: \" +\n            close.toFixed(2) +\n            \", Low: \" +\n            low.toFixed(2) +\n            \", High: \" +\n            high.toFixed(2),\n          5,\n          40\n        );\n      }\n    }\n\n    // Info\n    ctx.fillStyle = infoTextColor;\n    ctx.textAlign = \"left\";\n    let infoFrom = new Date(this.props.from * 1000);\n    let infoTo = new Date(this.props.to * 1000);\n    let infoStr =\n      this.props.symbol +\n      \" from \" +\n      dateForm.format(infoFrom) +\n      \" to \" +\n      dateForm.format(infoTo) +\n      \", Resolution: \" +\n      this.props.resolution;\n    ctx.fillText(infoStr, 5, fontSize + 5);\n  };\n\n  getHeightOfPrice = (price, topPriceHeight, botPriceHeight) => {\n    let { max, min } = this.props.chartData.computed;\n    return mapRange([min, max], [botPriceHeight, topPriceHeight], price);\n  };\n\n  getDisplayedPrices = () => {\n    let { max, min } = this.props.chartData.computed;\n    let zoomLevel = this.state.zoomLevel;\n    let defaultStep = 1;\n\n    let prices = [];\n    for (\n      let curr = Math.ceil(max);\n      curr > min;\n      curr -= zoomLevel * defaultStep\n    ) {\n      prices.push(curr);\n    }\n    prices.push(Math.floor(min));\n    return prices;\n  };\n\n  updateMousePos = (canvasX, canvasY) => {\n    this.setState({\n      mouseX: canvasX,\n      mouseY: canvasY\n    });\n  };\n\n  render() {\n    let { width, height, loaded, error } = this.props;\n\n    return (\n      <div className=\"center\">\n        <div className=\"chart\" style={{ width: width, height: height }}>\n          {loaded && error === null && (\n            <Canvas\n              draw={this.draw}\n              width={width}\n              height={height}\n              style={{\n                width: width,\n                height: height\n                // border: \"1px solid green\"\n              }}\n              updateMousePos={this.updateMousePos}\n            />\n          )}\n          {loaded && error !== null && (\n            <div> \n              Error 404: ticker not found\n            </div>\n          )}\n          {!loaded && <img src={loadingGif} alt=\"Loading...\" />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Canvas = (props) => {\n  const { updateMousePos, draw, ...rest } = props;\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"mousemove\", function (e) {\n      var cRect = canvas.getBoundingClientRect(); // Gets CSS pos, and width/height\n      var canvasX = Math.round(e.clientX - cRect.left); // Subtract the 'left' of the canvas\n      var canvasY = Math.round(e.clientY - cRect.top); // from the X/Y positions to make\n      updateMousePos(canvasX, canvasY);\n    });\n    canvas.addEventListener(\"mouseleave\", function (e) {\n      updateMousePos(null, null);\n    });\n    const context = canvas.getContext(\"2d\");\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n\n  return <canvas ref={canvasRef} {...rest} />;\n};","import './chartpage.css';\nimport React from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Chart } from './chart';\n\nexport const ChartPage = () => {\n  const { ticker } = useParams(); \n\n  return (\n    <Chart ticker={ticker}/>\n  )\n}","import React from 'react'\nimport { Alignment, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport './settingspage.css'\n\n\nexport const SettingsPage = () => {\n  return (\n    <div className=\"center\">\n      <div>  \n        <h1 className=\"settings-body\">\n          Welcome to the settings page.\n        </h1>\n      </div>\n    </div>\n  )\n} ","import React from 'react'\nimport { Alignment, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport { Button, InputGroup, Intent } from '@blueprintjs/core';\nimport './searchbar.css'\n\nexport const SearchBar = () => {\n  return (\n    <div className=\"center\">\n      <div className=\"search\">\n        <Navbar className=\"search-navbar\">  \n          <NavbarGroup align={ Alignment.RIGHT }>\n          <InputGroup className=\"search-bar\"\n                    placeholder=\"Search Bar\"\n                    />\n          </NavbarGroup>\n          \n        </Navbar>\n      </div>\n    </div>\n  )\n} ","import './App.css';\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  HashRouter,\n  Route\n} from \"react-router-dom\";\nimport { Header } from './components/header';\nimport { ChartPage } from './components/chartpage';\nimport { SettingsPage } from './components/settingspage';\nimport { SearchBar } from './components/searchbar';\nimport { useStickyState } from 'utils/storage';\n\n\nfunction App() {\n  \n  const [homePage, setHomePage] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/home\").then((response) => {\n      setHomePage(response.data)\n    })\n  }, []);\n\n  const [loggedInUsername, setLoggedInUsername] = useStickyState(null, \"username\");\n\n  return (\n    \n      <div className=\"center\">\n      <div className=\"App\">\n        <Header loggedInUsername={loggedInUsername}\n                setLoggedInUsername={setLoggedInUsername}/>\n        {homePage}\n        { loggedInUsername && \n          <div>\n            This div shows when a user is logged in.\n          </div>\n        }\n        { !loggedInUsername && \n          <div>\n            This div shows when there's no logged in user.\n          </div>\n        }\n        \n          <HashRouter basename=\"/2021-fall-cs160-pied-piper\">\n\n            {/* all routes that look like /ticker/xyz will be handled by the ChartPage component */}\n            <Route path=\"/ticker/:ticker\" children={<ChartPage/>} />\n            <Route path=\"/settings\" children={<SettingsPage />}/>\n            \n            <Route path=\"/search\" children={<SearchBar />}/>\n\n            {/* <Route path=\"/news/:ticker\" component={<NewsPage} /> */}\n\n\n          </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nconst setLocalStorageItem = (item, data) => {\n  localStorage.setItem(item, JSON.stringify(data));\n}\n\nconst clearLocalStorageItem = (item, data) => {\n  localStorage.setItem(item, null);\n}\n\nconst getLocalStorageItem = (item) => {\n  const rawItem = localStorage.getItem(item);\n  if (rawItem) {\n    try {\n      return JSON.parse(rawItem);\n    } catch {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n// Based on https://www.joshwcomeau.com/react/persisting-react-state-in-localstorage/\nfunction useStickyState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null\n      ? JSON.parse(stickyValue)\n      : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport { setLocalStorageItem, clearLocalStorageItem, getLocalStorageItem, useStickyState };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/normalize.css/normalize.css';\nimport '../node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '../node_modules/@blueprintjs/core/lib/css/blueprint.css';\nimport '../node_modules/@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport '../node_modules/@blueprintjs/popover2/lib/css/blueprint-popover2.css';\nimport '../node_modules/@blueprintjs/select/lib/css/blueprint-select.css';\nimport '../node_modules/@blueprintjs/timezone/lib/css/blueprint-timezone.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}